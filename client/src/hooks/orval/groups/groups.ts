/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * Oogiri App API
 * チャットでのテーマ・メッセージ投稿以外のAPIエンドポイントを提供します。 ユーザー登録、ログイン、プロフィール更新、グループ作成、招待、回答、いいね、の機能を提供します。

 * OpenAPI spec version: 1.0.0
 */
import * as axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  ChatHistoryResponse,
  GroupCreate,
  GroupInviteRequest,
  GroupMembershipUpdateRequest,
  Themes,
} from "../oogiriAppAPI.schemas";

export const getGroups = () => {
  /**
   * 新しいグループを作成します。
   * @summary グループ作成
   */
  const postGroupsCreate = <TData = AxiosResponse<void>>(
    groupCreate: GroupCreate,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(`/groups/create`, groupCreate, options);
  };
  /**
   * 指定グループに対して複数のユーザーを招待します。`status` は "INVITED" となります。
   * @summary ユーザー招待
   */
  const postGroupsInviteGroupId = <TData = AxiosResponse<void>>(
    groupId: string,
    groupInviteRequest: GroupInviteRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(
      `/groups/invite/${groupId}`,
      groupInviteRequest,
      options,
    );
  };
  /**
   * 招待されたユーザーが「参加」または「拒否」するときに status を更新します。リクエストにstatus（JOINED, REJECTED）
   * @summary グループメンバー更新
   */
  const patchGroupsUpdateMemberGroupId = <TData = AxiosResponse<void>>(
    groupId: string,
    groupMembershipUpdateRequest: GroupMembershipUpdateRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.patch(
      `/groups/update_member/${groupId}`,
      groupMembershipUpdateRequest,
      options,
    );
  };
  /**
   * 指定グループのチャット履歴を取得します。
   * @summary グループチャット履歴取得
   */
  const getGroupsChatGroupId = <TData = AxiosResponse<ChatHistoryResponse[]>>(
    groupId: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`/groups/chat/${groupId}`, options);
  };
  /**
   * 指定グループ内のテーマ全件を取得します。
   * @summary グループ内テーマ全件取得
   */
  const getGroupsThemesGroupId = <TData = AxiosResponse<Themes[]>>(
    groupId: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`/groups/themes/${groupId}`, options);
  };
  return {
    postGroupsCreate,
    postGroupsInviteGroupId,
    patchGroupsUpdateMemberGroupId,
    getGroupsChatGroupId,
    getGroupsThemesGroupId,
  };
};
export type PostGroupsCreateResult = AxiosResponse<void>;
export type PostGroupsInviteGroupIdResult = AxiosResponse<void>;
export type PatchGroupsUpdateMemberGroupIdResult = AxiosResponse<void>;
export type GetGroupsChatGroupIdResult = AxiosResponse<ChatHistoryResponse[]>;
export type GetGroupsThemesGroupIdResult = AxiosResponse<Themes[]>;
