/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * Oogiri App API
 * チャットでのテーマ・メッセージ投稿以外のAPIエンドポイントを提供します。 ユーザー登録、ログイン、プロフィール更新、グループ作成、招待、回答、いいね、の機能を提供します。

 * OpenAPI spec version: 1.0.0
 */
import type {
  ChatHistoryResponse,
  GroupCreate,
  GroupInviteRequest,
  GroupMembershipUpdateRequest,
  Themes,
} from "../oogiriAppAPI.schemas";

import { customInstance } from "../../../lib/custom-instance";

export const getGroups = () => {
  /**
   * 新しいグループを作成します。
   * @summary グループ作成
   */
  const postGroupsCreate = (groupCreate: GroupCreate) => {
    return customInstance<void>({
      url: `/groups/create`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: groupCreate,
    });
  };
  /**
   * 指定グループに対して複数のユーザーを招待します。`status` は "INVITED" となります。
   * @summary ユーザー招待
   */
  const postGroupsInviteGroupId = (
    groupId: string,
    groupInviteRequest: GroupInviteRequest,
  ) => {
    return customInstance<void>({
      url: `/groups/invite/${groupId}`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: groupInviteRequest,
    });
  };
  /**
   * 招待されたユーザーが「参加」または「拒否」するときに status を更新します。リクエストにstatus（JOINED, REJECTED）
   * @summary グループメンバー更新
   */
  const patchGroupsUpdateMemberGroupId = (
    groupId: string,
    groupMembershipUpdateRequest: GroupMembershipUpdateRequest,
  ) => {
    return customInstance<void>({
      url: `/groups/update_member/${groupId}`,
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
      data: groupMembershipUpdateRequest,
    });
  };
  /**
   * 指定グループのチャット履歴を取得します。
   * @summary グループチャット履歴取得
   */
  const getGroupsChatGroupId = (groupId: string) => {
    return customInstance<ChatHistoryResponse[]>({
      url: `/groups/chat/${groupId}`,
      method: "GET",
    });
  };
  /**
   * 指定グループ内のテーマ全件を取得します。
   * @summary グループ内テーマ全件取得
   */
  const getGroupsThemesGroupId = (groupId: string) => {
    return customInstance<Themes[]>({
      url: `/groups/themes/${groupId}`,
      method: "GET",
    });
  };
  return {
    postGroupsCreate,
    postGroupsInviteGroupId,
    patchGroupsUpdateMemberGroupId,
    getGroupsChatGroupId,
    getGroupsThemesGroupId,
  };
};
export type PostGroupsCreateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>["postGroupsCreate"]>>
>;
export type PostGroupsInviteGroupIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>["postGroupsInviteGroupId"]>>
>;
export type PatchGroupsUpdateMemberGroupIdResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getGroups>["patchGroupsUpdateMemberGroupId"]>
  >
>;
export type GetGroupsChatGroupIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>["getGroupsChatGroupId"]>>
>;
export type GetGroupsThemesGroupIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>["getGroupsThemesGroupId"]>>
>;
